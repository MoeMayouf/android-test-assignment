[versions]
appcompat = "1.6.1"
coreKtx = "1.10.1"
junitVersion = "1.1.5"
junit = "4.13.2"
kotlinBom = "1.8.0"
lifecycleRuntimeKtx = "2.6.1"
activityCompose = "1.7.2"
composeBom = "2022.10.00"
constraintLayout = "2.1.4"
material = "1.9.0"
navigationCompose = "2.6.0"
hiltNavigationCompose = "1.0.0"
room = "2.5.2"
navigationTesting = "2.6.0"
retrofit = "2.9.0"
gson = "2.10.1"
stetho = "1.6.0"
glide = "4.15.1"
glideTransformations = "4.3.0"
glideCompose = "1.0.0-alpha.1"
daggerHilt = "2.45"
androidxHilt = "1.0.0"
truth = "1.1.3"
mockWebServer = "5.0.0-alpha.11"
mockitoAndroid = "5.4.0"
mockitoCore = "5.4.0"
mockitoKotlin = "5.0.0"
robolectric = "4.10.3"
coreTesting = "2.2.0"
espressoCore = "3.5.1"
agp = "8.0.2"
org-jetbrains-kotlin-android = "1.7.20"

[libraries]
appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
coreKtx = { module = "androidx.core:core-ktx", version.ref = "coreKtx" }
ext-junit = { module = "androidx.test.ext:junit", version.ref = "junitVersion" }
junit = { module = "junit:junit", version.ref = "junit" }
kotlinBom = { module = "org.jetbrains.kotlin:kotlin-bom", version.ref = "kotlinBom" }
lifecycleRuntimeKtx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycleRuntimeKtx" }
activityCompose = { module = "androidx.activity:activity-compose", version.ref = "activityCompose" }
composeUi = { module = "androidx.compose.ui:ui", version.ref = "composeBom" }
composeUiGraphics = { module = "androidx.compose.ui:ui-graphics", version.ref = "composeBom" }
composeUiToolingPreview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "composeBom" }
composeMaterial3 = { module = "androidx.compose.material3:material3", version.ref = "composeBom" }
constraintLayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "constraintLayout" }
material = { module = "com.google.android.material:material", version.ref = "material" }
navigationCompose = { module = "androidx.navigation:navigation-compose", version.ref = "navigationCompose" }
hiltNavigationCompose = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "hiltNavigationCompose" }
roomRuntime = { module = "androidx.room:room-runtime", version.ref = "room" }
navigationTesting = { module = "androidx.navigation:navigation-testing", version.ref = "navigationTesting" }
roomKtx = { module = "androidx.room:room-ktx", version.ref = "room" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofitGson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit" }
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
glide = { module = "com.github.bumptech.glide:glide", version.ref = "glide" }
glideCompiler = { module = "com.github.bumptech.glide:compiler", version.ref = "glide" }
glideTransformations = { module = "jp.wasabeef:glide-transformations", version.ref = "glideTransformations" }
glideCompose = { module = "com.github.bumptech.glide:compose", version.ref = "glideCompose" }
daggerHiltAndroid = { module = "com.google.dagger:hilt-android", version.ref = "daggerHilt" }
daggerHiltAndroidCompiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "daggerHilt" }
androidxHiltCompiler = { module = "androidx.hilt:hilt-compiler", version.ref = "androidxHilt" }
truth = { module = "com.google.truth:truth", version.ref = "truth" }
mockWebServer = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "mockWebServer" }
mockitoAndroid = { module = "org.mockito:mockito-android", version.ref = "mockitoAndroid" }
mockitoCore = { module = "org.mockito:mockito-core", version.ref = "mockitoCore" }
mockitoKotlin = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "mockitoKotlin" }
robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectric" }
coreTesting = { module = "androidx.arch.core:core-testing", version.ref = "coreTesting" }
espressoCore = { module = "androidx.test.espresso:espresso-core", version.ref = "espressoCore" }
room-common = { group = "androidx.room", name = "room-common", version = "2.5.2" }

[plugins]
com-android-library = { id = "com.android.library", version.ref = "agp" }
org-jetbrains-kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "org-jetbrains-kotlin-android" }